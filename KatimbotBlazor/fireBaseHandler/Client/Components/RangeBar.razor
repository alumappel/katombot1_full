

<div class="myrange" style="width:@width">
    <p style="font-size: 12pt; margin-bottom: -0.5em;">@myFeedback</p>
    <div class="marker" style="margin-right: @markerPlace"></div>
    <div class="range" style="background:linear-gradient(90deg, @red @gradient[0]%, @yellow @gradient[1]%, @green @gradient[2]%, @green @gradient[3]%, @yellow @gradient[4]%, @yellow @gradient[5]%, @red @gradient[6]%);"></div>
    <div>
        <span style="font-size:8pt; margin-left:@mplace">@msg</span>
    </div>

</div>

@code {
    [Parameter]
    public List<int> Range { get; set; }
    [Parameter]
    public List<double> RangeD { get; set; }
    [Parameter]
    public string myFeedback { get; set; }
    [Parameter]
    public string width { get; set; }
    //[Parameter]
    //public string msg { get; set; }
    [Parameter]
    public double place { get; set; }

    [Parameter]
    public int score { get; set; }

    List<double> gradient = new List<double>();
    string markerPlace = "";
    string mplace = "";
    string msg = "";
    string red = "rgba(240,151,203,1)";
    string yellow = "rgba(240,203,127,1)";
    string green = "rgba(156,240,151,1)";
    List<double> rangeP = new List<double>();
    double lplace;
    protected override async Task OnInitializedAsync()
    {
        if (Range != null)
        {
            gradient.Add(0); //אדום 0
            gradient.Add(Range[0] * 50 / Range[2]); //צהוב  [1]
            gradient.Add(Range[0] * 100 / Range[2]);  //תחילת ירוק [2]
            gradient.Add(Range[1] * 100 / Range[2]); //סיום ירוק [3]
            double middle = (Range[2] + Range[1]) / 2;
            double middleM = (Range[1] + middle) / 2;
            gradient.Add((middleM * 100 / Range[2])); //צהוב [4]
            gradient.Add((middle * 100 / Range[2])); //צהוב [4]
            gradient.Add(Range[2] * 100 / Range[2]);  //אדום [5]

            markerPlace = (100 - place * 100 / Range[2]).ToString() + "%";
            lplace = (place * 100 / Range[2]);

            if (place <= Range[1] && place > Range[0])
                msg = "מצוין";
            {
                if (place < Range[0] / 2)
                {
                    msg = "מעט מאוד";
                }
                else if (place < Range[0])
                    msg = "מעט מדי";
                else if (place <= Range[1])
                    msg = "מצוין";
                else if (place < (Range[2] + Range[1]) / 2)
                    msg = "יותר מדי";
                else
                    msg = "הרבה מאוד";
            }
        }
        if (RangeD != null)
        {
            gradient.Add(0); //אדום 0
            gradient.Add(RangeD[0] * 50 / RangeD[2]); //צהוב  [1]
            gradient.Add(RangeD[0] * 100 / RangeD[2]);  //תחילת ירוק [2]
            gradient.Add(RangeD[1] * 100 / RangeD[2]); //סיום ירוק [3]
            double middle = (RangeD[2] + RangeD[1]) / 2;
            double middleM = (RangeD[1] + middle) / 2;
            gradient.Add((middleM * 100 / RangeD[2])); //צהוב [4]
            gradient.Add((middle * 100 / RangeD[2])); //צהוב [4]
            gradient.Add(RangeD[2] * 100 / RangeD[2]);  //אדום [5]


            markerPlace = (100 - place * 100 / RangeD[2]).ToString() + "%";
            lplace = (place * 100 / RangeD[2]);
            if (place <= RangeD[1] && place > RangeD[0])
                msg = "מצוין";
            else
            {
                if (place < RangeD[0] / 2)
                    msg = "מעט מאוד";
                else if (place < RangeD[0])
                    msg = "מעט מדי";
                else if (place <= RangeD[1])
                    msg = "מצוין";
                else if (place < (RangeD[2] + RangeD[1]) / 2)
                    msg = "יותר מדי";
                else
                    msg = "הרבה מאוד";
            }
        }

        if (msg == "מצוין")
        {
            if (score == 0)
            {
                msg = "לא יציב";
                lplace -= 3;
            }
            else
            {
                lplace -= 2;
            }
        }
        else
            lplace -= 4;
        mplace = lplace.ToString() + "%";

    }
}
